apply plugin: 'com.palantir.sls-java-service-distribution'
apply plugin: 'com.palantir.docker'

dependencies {
    compile project(':ignite-shuffle-spark-api')
    compile 'org.apache.ignite:ignite-core'
    compile 'org.apache.ignite:ignite-kubernetes'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    testCompile 'com.palantir.conjure.java.runtime:conjure-java-jaxrs-client'
    testCompile 'junit:junit'
    testCompile 'org.assertj:assertj-core'
    testCompile 'org.mockito:mockito-core'

    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'
}

distribution {
    serviceName project.name
    mainClass 'com.palantir.ignite.IgniteRunner'
}

docker {
    name "palantir.com/ignite-shuffle-service"
    tags project.version
    files tasks.distTar.outputs
}

tasks.docker.dependsOn tasks.distTar

def dockerFileContents = """
FROM openjdk:8-alpine
RUN apk add bash
ADD ignite-shuffle-service-${project.version}.sls.tgz .
WORKDIR "/ignite-shuffle-service-${project.version}"
ENTRYPOINT [ "service/bin/init.sh", "console" ]
"""

task writeDockerFile {
  doLast {
    new File("$projectDir/Dockerfile").text = dockerFileContents
  }
}

tasks.dockerPrepare.dependsOn tasks.writeDockerFile
